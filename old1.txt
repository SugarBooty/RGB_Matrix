/* Pinout:
 *  d2 - 4017 reset
 *  d3 - 4017 clock
 *  
 *  d5 - shift clock
 *  d6 - shift clear
 *  d7 - shift ser in
 * 
 *  d9 - blank
 */

#define DISPL_RST 9
//gnd
#define a4017_CLK 8
#define a4017_RST 7
#define SHIFT_CLK 6
#define SHIFT_CLR 5
#define SHIFT_SER 4
//n/c
//vcc

unsigned long curMillis = 0;
unsigned long prevMillis = 0;
const long shiftDelay = 10;

int state = 1;
int row;
int col;
int rowLoad = 0;
int colLoad = 0;
int x;
int y = 0;
int value;
bool loadState = 0;
bool loadFrame = 1;

bool frameBuffer[24][8] = {
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
};

bool loadBuffer[24][8];

bool blank[8][24] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
};

bool white[24][8] = {
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
  {1,1,1,1,1,1,1,1},
};

bool red[24][8] = {
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
};

bool green[24][8] = {
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
};

bool blue[24][8] = {
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
  {0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0},
  {1,1,1,1,1,1,1,1},
};

void setup() {
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);
  pinMode(13, OUTPUT);

//Resets the 4017
  digitalWrite(a4017_RST, HIGH);
  delay(10);
  digitalWrite(a4017_RST, LOW);

//Initiates serial communication
  Serial.begin(115200);
  Serial.write("READY");
}

void clearReg() {
//Sends a pulse to the clear pin on the shift registers
  digitalWrite(SHIFT_CLR, LOW);
  digitalWrite(SHIFT_CLR, HIGH);
}

void nextRow() {
//Sends a pulse to the 4017 clock pin
  digitalWrite(a4017_CLK, HIGH);
  digitalWrite(a4017_CLK, LOW);
}

void ShiftOut(int value) {
//Sends the value to the shift registers and sends a clock pulse, inverted because I used PNP trannies
  digitalWrite(SHIFT_CLK, LOW);
  digitalWrite(SHIFT_SER, !value);
  digitalWrite(SHIFT_CLK, HIGH);
}


void loop() {
//  curMillis = millis();

/*
  digitalWrite(13, HIGH);
  delay(1);
  digitalWrite(13, LOW);
  */
  clearReg();
      
  for (row=0;row<8;row++) {
    for (col=0;col<24;col++) {
//      Serial.println(frameBuffer[col][row]);
      if (loadState) {
        ShiftOut(frameBuffer[col][row]);
      } else {
        ShiftOut(loadBuffer[col][row]);
      }
//      delay(1);
     }
    digitalWrite(DISPL_RST, HIGH);
//    delay(1);
    digitalWrite(DISPL_RST, LOW);
    nextRow();

//      Serial.print(frameBuffer)
    loadFrame = true;

    if (Serial.available() >= 8) {
      for (rowLoad=0;rowLoad<8;rowLoad++) {
        if (loadState) {
          loadBuffer[colLoad][rowLoad] = Serial.read();
        } else {
          frameBuffer[colLoad][rowLoad] = Serial.read();
        }
      }
      Serial.flush();
      Serial.write('R');
      if (colLoad < 24) {
        colLoad++;
      }
      else{
        colLoad = 0;
        loadFrame = false;
      }
    }
    else {
//      goto retry;
    }
    loadState = !loadState;
  
  }
}

/*
void serialEvent(){
  while (Serial.available() && (loadFrame == true)) {
//    retry:
    if (Serial.available() >= 8) {
      for (rowLoad=0;rowLoad<8;rowLoad++) {
        if (loadState) {
          loadBuffer[colLoad][rowLoad] = Serial.read();
        } else {
          frameBuffer[colLoad][rowLoad] = Serial.read();
        }
      }
      Serial.flush();
      Serial.write('R');
      if (colLoad < 24) {
        colLoad++;
      }
      else{
        colLoad = 0;
        loadFrame = false;
      }
    }
    else {
//      goto retry;
    }
    loadState = !loadState;
  }
}
*/


